model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  messages  Message[]
  participants Participant[]
}

model Chat {
  id           String        @id @default(uuid())
  name         String?
  type         ChatType
  createdAt    DateTime      @default(now())
  messages     Message[]
  participants Participant[]
}

model Participant {
  id        String   @id @default(uuid())
  userId    String
  chatId    String
  joinedAt  DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])

  @@unique([userId, chatId])
}

model Message {
  id         String   @id @default(uuid())
  senderId   String
  chatId     String
  content    String
  createdAt  DateTime @default(now())
  replyToId  String? 

  sender     User     @relation(fields: [senderId], references: [id])
  chat       Chat     @relation(fields: [chatId], references: [id])
  replyTo    Message? @relation("ReplyTo", fields: [replyToId], references: [id])
  replies    Message[] @relation("ReplyTo")
}

enum ChatType {
  ONE_TO_ONE
  GROUP
  SUBGROUP
}
